// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
  DOCTOR
}
enum DoctorRole {
  
  ADMIN
  DOCTOR
}

model User {
 id              String @id @default(auto()) @map("_id") @db.ObjectId
 firstName       String
 lastName        String 
 role            UserRole   @default(USER)
 bio             String?
 website         String? 
 gender          String?
 email           String   @unique 
 active          Boolean  @default(false)
 emailVerified   DateTime?
 imageUrl        String? 
 password        String
 colorScheme     String        @default("theme-orange")
 accounts        Account[]
 sessions        Session[]
 createdAt       DateTime @default(now())
 updatedAt       DateTime @updatedAt
 
}
model Doctor {
 id              String @id @default(auto()) @map("_id") @db.ObjectId
 firstName       String
 lastName        String 
 role            DoctorRole   @default(DOCTOR)
 bio             String?
 phone           String? 
 gender          String?
 email           String   @unique 
 active          Boolean  @default(false)
 emailVerified   DateTime?
 imageUrl        String? 
 password        String
 
 createdAt       DateTime @default(now())
 updatedAt       DateTime @updatedAt
 
}


model Session {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String  @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 userId             String   @db.ObjectId
 type               String
 provider           String
 providerAccountId  String
 refresh_token      String?  @db.String
 access_token       String?  @db.String
 expires_at         Int?
 token_type         String?
 scope              String?
 id_token           String?  @db.String
 session_state      String?
 user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 @@unique([provider, providerAccountId])
}

// model Category {
//   id                String @id @default(auto()) @map("_id") @db.ObjectId
//   title             String
//   slug              String @unique
//   imageUrl          String?   
//   createdAt          DateTime @default(now())
//   updatedAt          DateTime @updatedAt
// }

